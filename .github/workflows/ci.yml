name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nexus_gaming_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nexus_gaming_test
      JWT_SECRET: test-jwt-secret
      NODE_ENV: test
      NEXT_PUBLIC_API_URL: http://localhost:3000/api

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-

    - name: Install dependencies
      run: npm ci

    - name: Check code formatting
      run: npm run format:check

    - name: Lint
      run: npm run lint:strict

    - name: Type check
      run: npm run type-check

    - name: Setup Database
      run: npx prisma migrate deploy

    - name: Build
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3000/api
        # Add other required build env variables here

    # Uncomment when tests are added
    - name: Run tests
      run: npm test

    # Optional: Add deployment steps here
    # - name: Deploy
    #   if: github.ref == 'refs/heads/main'
    #   run: |
    #     # Add deployment commands

  # Optional: Add security scanning
  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: npm audit

    # You can add more security steps here:
    # - CodeQL Analysis
    # - Dependency scanning
    # - SAST tools
